nous proposons de creer une application web aid23 premttant de gerer les dones d'une action criative orgranisee pour prerparer la fete d aid el fir
 app devv avec symfo 5.4 et oes donnes enregistree dans une base de donnes mysql
 with tables association ( id :ai : integer, associationName: string , objective:float)
 donator ( nic :ai :integer, name:string, donNature string :argent ou vetement ,donAmount :float ,donDate:date)

 and assoaciation et donator are onetomany linked


Compléter le code nécessaire pour créer les entités Association et Donator avec les champs mentionnés et la relation OneToMany entre elles. (2 pts)
Association

id
associationName
objective
Donator

nic
name
donNature (argent ou vetement)
donAmount
donDate
association_id (clé étrangère)
Compléter le code nécessaire pour afficher la liste des associations ordonnées par nom et afficher le nom de l'association en majuscules dans le fichier twig correspondant. (3 pts)
Controller
/**

@Route("/associationList", name="associationList")
*/
public function associationList(): Response
{
$em = $this->getDoctrine()->getManager();
$associations = $em->getRepository(Association::class)->findBy([], ['associationName' => 'ASC']);
return $this->render('aid23/associationList.html.twig', [
'associations' => $associations,
]);
}
Twig (associationList.html.twig)
{% for a in associations %}
{{ a.associationName|upper }}
{% endfor %}

Compléter le code nécessaire pour ajouter un nouveau donateur avec son association (en récupérant l'association à partir de son id) et afficher un message de confirmation une fois l'ajout effectué. (3 pts)
Controller
/**

@Route("/addDonator", name="addDonator")
*/
public function addDonator(Request $request): Response
{
$em = $this->getDoctrine()->getManager();
$donator = new Donator();
$form = $this->createForm(DonatorType::class, $donator);
$form->handleRequest($request);
if ($form->isSubmitted() && $form->isValid()) {
$associationId = $request->get('association_id');
$association = $em->getRepository(Association::class)->find($associationId);
$donator->setAssociation($association);
$em->persist($donator);
$em->flush();
$this->addFlash('success', 'Donateur ajouté avec succès');
return $this->redirectToRoute('addDonator');
}
$associations = $em->getRepository(Association::class)->findBy([], ['associationName' => 'ASC']);
return $this->render('aid23/addDonator.html.twig', [
'form' => $form->createView(),
'associations' => $associations,
]);
}
Twig (addDonator.html.twig)
display associationController.php
<form method="post">
{{ form_start(form) }}
{{ form_widget(form) }}
{{ form_row(form.association_id, {'label': 'Association'}) }}
<button type="submit">Ajouter</button>
{{ form_end(form) }}
{% for message in app.flashes('success') %}
<div class="alert alert-success">{{ message }}</div>
{% endfor %}
{% if form_errors(form) %}
<div class="alert alert-danger">{{ form_errors(form) }}</div>
{% endif %}
{% for error in app.flashes('error') %}
<div class="alert alert-danger">{{ error }}</div>
{% endfor %}
Compléter le code nécessaire pour afficher la liste des dons d'une association donnée en cliquant sur le nom de l'association dans la liste des associations. (3 pts)
Controller
/**

@Route("/associationDons/{id}", name="associationDons")
*/
public function associationDons($id): Response
{
$em = $this->getDoctrine()->getManager();
$association = $em->getRepository(Association::class)->find($id);
$dons = $association->getDonators();
return $this->render